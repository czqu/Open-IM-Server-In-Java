<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.czqu.openimserver.dao.mapper.FriendsMapper">
  <resultMap id="BaseResultMap" type="net.czqu.openimserver.dao.pojo.Friends">
    <id column="owner_user_id" jdbcType="VARCHAR" property="ownerUserId" />
    <id column="friend_user_id" jdbcType="VARCHAR" property="friendUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="add_source" jdbcType="INTEGER" property="addSource" />
    <result column="operator_user_id" jdbcType="VARCHAR" property="operatorUserId" />
    <result column="ex" jdbcType="VARCHAR" property="ex" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    owner_user_id, friend_user_id, remark, create_time, add_source, operator_user_id, 
    ex
  </sql>
  <select id="selectByExample" parameterType="net.czqu.openimserver.dao.example.FriendsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from friends
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="net.czqu.openimserver.dao.pojo.FriendsKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends
    where owner_user_id = #{ownerUserId,jdbcType=VARCHAR}
      and friend_user_id = #{friendUserId,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from friends
    where owner_user_id = #{record.ownerUserId,jdbcType=VARCHAR}
      and friend_user_id = #{record.friendUserId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="net.czqu.openimserver.dao.pojo.FriendsKey">
    delete from friends
    where owner_user_id = #{ownerUserId,jdbcType=VARCHAR}
      and friend_user_id = #{friendUserId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.czqu.openimserver.dao.example.FriendsExample">
    delete from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.czqu.openimserver.dao.pojo.Friends">
    insert into friends (owner_user_id, friend_user_id, remark, 
      create_time, add_source, operator_user_id, 
      ex)
    values (#{ownerUserId,jdbcType=VARCHAR}, #{friendUserId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{addSource,jdbcType=INTEGER}, #{operatorUserId,jdbcType=VARCHAR}, 
      #{ex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into friends
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.ownerUserId != null">
            owner_user_id,
          </if>
          <if test="record.friendUserId != null">
            friend_user_id,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.addSource != null">
            add_source,
          </if>
          <if test="record.operatorUserId != null">
            operator_user_id,
          </if>
          <if test="record.ex != null">
            ex,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.ownerUserId != null">
            #{record.ownerUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.friendUserId != null">
            #{record.friendUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.addSource != null">
            #{record.addSource,jdbcType=INTEGER},
          </if>
          <if test="record.operatorUserId != null">
            #{record.operatorUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.ex != null">
            #{record.ex,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="net.czqu.openimserver.dao.example.FriendsExample" resultType="java.lang.Long">
    select count(*) from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friends
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.ownerUserId != null">
            owner_user_id = #{record.ownerUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.friendUserId != null">
            friend_user_id = #{record.friendUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.addSource != null">
            add_source = #{record.addSource,jdbcType=INTEGER},
          </if>
          <if test="record.operatorUserId != null">
            operator_user_id = #{record.operatorUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.ex != null">
            ex = #{record.ex,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friends
    set owner_user_id = #{record.ownerUserId,jdbcType=VARCHAR},
      friend_user_id = #{record.friendUserId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      add_source = #{record.addSource,jdbcType=INTEGER},
      operator_user_id = #{record.operatorUserId,jdbcType=VARCHAR},
      ex = #{record.ex,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update friends
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.addSource != null">
            add_source = #{record.addSource,jdbcType=INTEGER},
          </if>
          <if test="record.operatorUserId != null">
            operator_user_id = #{record.operatorUserId,jdbcType=VARCHAR},
          </if>
          <if test="record.ex != null">
            ex = #{record.ex,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where owner_user_id = #{record.ownerUserId,jdbcType=VARCHAR}
      and friend_user_id = #{record.friendUserId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.czqu.openimserver.dao.pojo.Friends">
    update friends
    set remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      add_source = #{addSource,jdbcType=INTEGER},
      operator_user_id = #{operatorUserId,jdbcType=VARCHAR},
      ex = #{ex,jdbcType=VARCHAR}
    where owner_user_id = #{ownerUserId,jdbcType=VARCHAR}
      and friend_user_id = #{friendUserId,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="net.czqu.openimserver.dao.example.FriendsExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from friends
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into friends
    (owner_user_id, friend_user_id, remark, create_time, add_source, operator_user_id, 
      ex)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.ownerUserId,jdbcType=VARCHAR}, #{item.friendUserId,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.addSource,jdbcType=INTEGER}, #{item.operatorUserId,jdbcType=VARCHAR}, 
        #{item.ex,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into friends (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'owner_user_id'.toString() == column.value">
          #{item.ownerUserId,jdbcType=VARCHAR}
        </if>
        <if test="'friend_user_id'.toString() == column.value">
          #{item.friendUserId,jdbcType=VARCHAR}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'add_source'.toString() == column.value">
          #{item.addSource,jdbcType=INTEGER}
        </if>
        <if test="'operator_user_id'.toString() == column.value">
          #{item.operatorUserId,jdbcType=VARCHAR}
        </if>
        <if test="'ex'.toString() == column.value">
          #{item.ex,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>