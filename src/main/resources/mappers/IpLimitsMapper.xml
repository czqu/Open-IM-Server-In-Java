<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.czqu.openimserver.dao.mapper.IpLimitsMapper">
  <resultMap id="BaseResultMap" type="net.czqu.openimserver.dao.pojo.IpLimits">
    <id column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="limit_register" jdbcType="TINYINT" property="limitRegister" />
    <result column="limit_login" jdbcType="TINYINT" property="limitLogin" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="limit_time" jdbcType="TIMESTAMP" property="limitTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ip, limit_register, limit_login, create_time, limit_time
  </sql>
  <select id="selectByExample" parameterType="net.czqu.openimserver.dao.example.IpLimitsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ip_limits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from ip_limits
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ip_limits
    where ip = #{ip,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from ip_limits
    where ip = #{ip,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ip_limits
    where ip = #{ip,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.czqu.openimserver.dao.example.IpLimitsExample">
    delete from ip_limits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.czqu.openimserver.dao.pojo.IpLimits">
    insert into ip_limits (ip, limit_register, limit_login, 
      create_time, limit_time)
    values (#{ip,jdbcType=VARCHAR}, #{limitRegister,jdbcType=TINYINT}, #{limitLogin,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{limitTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into ip_limits
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.ip != null">
            ip,
          </if>
          <if test="record.limitRegister != null">
            limit_register,
          </if>
          <if test="record.limitLogin != null">
            limit_login,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.limitTime != null">
            limit_time,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.ip != null">
            #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.limitRegister != null">
            #{record.limitRegister,jdbcType=TINYINT},
          </if>
          <if test="record.limitLogin != null">
            #{record.limitLogin,jdbcType=TINYINT},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.limitTime != null">
            #{record.limitTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="net.czqu.openimserver.dao.example.IpLimitsExample" resultType="java.lang.Long">
    select count(*) from ip_limits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ip_limits
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.ip != null">
            ip = #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.limitRegister != null">
            limit_register = #{record.limitRegister,jdbcType=TINYINT},
          </if>
          <if test="record.limitLogin != null">
            limit_login = #{record.limitLogin,jdbcType=TINYINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.limitTime != null">
            limit_time = #{record.limitTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ip_limits
    set ip = #{record.ip,jdbcType=VARCHAR},
      limit_register = #{record.limitRegister,jdbcType=TINYINT},
      limit_login = #{record.limitLogin,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      limit_time = #{record.limitTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update ip_limits
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.limitRegister != null">
            limit_register = #{record.limitRegister,jdbcType=TINYINT},
          </if>
          <if test="record.limitLogin != null">
            limit_login = #{record.limitLogin,jdbcType=TINYINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.limitTime != null">
            limit_time = #{record.limitTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where ip = #{record.ip,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.czqu.openimserver.dao.pojo.IpLimits">
    update ip_limits
    set limit_register = #{limitRegister,jdbcType=TINYINT},
      limit_login = #{limitLogin,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      limit_time = #{limitTime,jdbcType=TIMESTAMP}
    where ip = #{ip,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="net.czqu.openimserver.dao.example.IpLimitsExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ip_limits
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from ip_limits
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into ip_limits
    (ip, limit_register, limit_login, create_time, limit_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.ip,jdbcType=VARCHAR}, #{item.limitRegister,jdbcType=TINYINT}, #{item.limitLogin,jdbcType=TINYINT}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.limitTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into ip_limits (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'ip'.toString() == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'limit_register'.toString() == column.value">
          #{item.limitRegister,jdbcType=TINYINT}
        </if>
        <if test="'limit_login'.toString() == column.value">
          #{item.limitLogin,jdbcType=TINYINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'limit_time'.toString() == column.value">
          #{item.limitTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>